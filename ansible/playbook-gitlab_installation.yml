---

- name: 'Install Gitlab'
  hosts: 'k3s1'
  gather_facts: true
  become: false
  module_defaults:
    kubernetes.core.helm:
      kubeconfig: './k3s-kubeconfig'
    kubernetes.core.k8s:
      kubeconfig: './k3s-kubeconfig'
    kubernetes.core.k8s_info:
      kubeconfig: './k3s-kubeconfig'

  tasks:

    - name: 'Create the postgres-secret secret'
      delegate_to: 'localhost'
      kubernetes.core.k8s:
        state: 'present'
        resource_definition: |
          apiVersion: v1
          kind: Secret
          metadata:
            name: postgres-secret
            namespace: gitlab
          stringData:
            psql-password: dontpanic

    - name: 'Create the gitlab-root-password secret'
      delegate_to: 'localhost'
      kubernetes.core.k8s:
        state: 'present'
        resource_definition: |
          apiVersion: v1
          kind: Secret
          metadata:
            name: gitlab-root-password
            namespace: gitlab
          stringData:
            gitlab-root-password: atotallysecurepassword

    - name: 'Create the gitlab CRD'
      delegate_to: 'localhost'
      kubernetes.core.k8s:
        state: 'present'
        resource_definition: |
          apiVersion: apps.gitlab.com/v1beta1
          kind: GitLab
          metadata:
            name: gitlab
            namespace: gitlab
          spec:
            chart:
              version: "8.10.4"
              values:
                #################################
                # enabled subcharts
                redis:
                  install: true
                #################################
                # disabled subcharts
                #################################
                # https://docs.gitlab.com/charts/advanced/external-nginx/
                nginx-ingress:
                  enabled: false
                # https://docs.gitlab.com/charts/advanced/external-db/
                postgresql:
                  install: false
                # https://docs.gitlab.com/charts/installation/command-line-options/#advanced-gitlab-configuration
                gitlab-runner:
                  install: false
                prometheus:
                  install: false
                registry:
                  hpa:
                    minReplicas: 1
                gitlab:
                  gitlab-shell:
                    minReplicas: 1
                    maxReplicas: 1
                  webservice:
                    minReplicas: 1
                    maxReplicas: 1
                  sidekiq:
                    replicas: 1
                  kas:
                    minReplicas: 1
                global:
                  #################################
                  # enabled subcharts
                  #################################
                  # https://docs.gitlab.com/charts/installation/command-line-options/#basic-configuration
                  minio:
                    enabled: true
                  #################################
                  # settings
                  edition: ce
                  time_zone: Europe/Berlin
                  initialRootPassword:
                    secret: gitlab-root-password
                    key: gitlab-root-password
                  hosts:
                    domain: "{{ hostvars['k3s1']['ansible_default_ipv4']['address'] }}.sslip.io"
                    https: false
                  #########################################
                  ingress:
                    enabled: true
                    configureCertmanager: false
                    provider: traefik
                    class: traefik
                    tls:
                      enabled: false
                  #########################################
                  psql:
                    host: db-postgresql-hl.postgresql.svc.cluster.local
                    password:
                      secret: postgres-secret
                      key: psql-password
                    port: 5432
                    database: gitlab
                    username: fordprefect
                  #########################################
                  appConfig:
                    terraformState:
                      enabled: true
                    object_store:
                      enabled: false
                    lfs:
                      enabled: false
                    artifacts:
                      enabled: false
                    uploads:
                      enabled: false
                    packages:
                      enabled: false
                    externalDiffs:
                      enabled: false
                    ciSecureFiles:
                      enabled: false
                    dependencyProxy:
                      enabled: false
                    gitlab_docs:
                      enabled: false
                    omniauth:
                      enabled: false

    - name: 'Notify user of long wait'
      delegate_to: 'localhost'
      ansible.builtin.debug:
        msg: 'It can take up to 20 minutes for Gitlab to be fully running, so stay tuned...'

    - name: 'Flush handlers'
      ansible.builtin.meta: flush_handlers

    - name: 'Wait until the gitlab-redis-master-0 pod is existing'
      delegate_to: 'localhost'
      kubernetes.core.k8s_info:
        api_version: v1
        kind: Pod
        name: gitlab-redis-master-0
        namespace: gitlab
        wait: true
        wait_sleep: 10
        wait_timeout: 1200

    - name: 'Wait until the gitlab-migrations pod is existing'
      delegate_to: 'localhost'
      kubernetes.core.k8s_info:
        api_version: v1
        kind: Pod
        namespace: gitlab
        label_selectors:
          - app=migrations
      register: migrations_pod_existing
      until: |
        migrations_pod_existing | json_query("resources[*].status.containerStatuses[*].name") == [["migrations"]]
      retries: 120
      delay: 10

    - name: 'Wait until the gitlab-migrations pod is completed'
      delegate_to: 'localhost'
      kubernetes.core.k8s_info:
        api_version: v1
        kind: Pod
        namespace: gitlab
        label_selectors:
          - app=migrations
      register: migrations_pod_completed
      until: |
        migrations_pod_completed | json_query("resources[*].status.containerStatuses[*].state.terminated.reason") == [["Completed"]]
      retries: 120
      delay: 10

    - name: 'Wait until the gitlab-webservice pod is running'
      delegate_to: 'localhost'
      kubernetes.core.k8s_info:
        api_version: v1
        kind: Pod
        namespace: gitlab
        label_selectors:
          - app=webservice
        wait_condition:
          status: "True"
          type: Ready
        wait: true
        wait_sleep: 10
        wait_timeout: 3000

    - name: 'Wait until the gitlab URL is reachable'
      ansible.builtin.uri:
        url: "http://gitlab.{{ hostvars['k3s1']['ansible_default_ipv4']['address'] }}.sslip.io"
      register: result
      until: "result.status == 200"
      retries: 11
      delay: 10

    - name: 'Install an ingressrouteTCP for GitLab SSH'
      delegate_to: 'localhost'
      kubernetes.core.k8s:
        state: 'present'
        resource_definition: |
          apiVersion: traefik.io/v1alpha1
          kind: IngressRouteTCP
          metadata:
            name: gitlab-ssh
            namespace: gitlab
          spec:
            entryPoints:
              - gitlab-shell
            routes:
              - match: HostSNI(`*`)
                services:
                  - name: gitlab-gitlab-shell
                    port: 22

    - name: 'Gitlab URL'
      delegate_to: 'localhost'
      ansible.builtin.debug:
        msg: "Connect to the following URL in your browser: http://gitlab.{{ hostvars['k3s1']['ansible_default_ipv4']['address'] }}.sslip.io"

    - name: 'Gitlab credentials'
      ansible.builtin.debug:
        msg: "To log in, use 'root' as the username and 'atotallysecurepassword' as the password"
